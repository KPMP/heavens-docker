version: "3"
services:
  
  mongodb:
    container_name: mongodb
    image: mongo:latest
    environment:
       - MONGO_DATA_DIR=/data/db
       - MONGO_LOG_DIR=/dev/null
    volumes:
       - "${ENV_DATALAKE_MONGO_DIR}:/data/db"
    ports:
      - "${ENV_MONGO_PORT:-27017}:27017"
    command: mongod --smallfiles --logpath=/dev/null # --quiet
    networks:
      local:
        aliases:
          - mongodb

  spring:
    container_name: spring
    build: ./spring
    ports:
      - "${ENV_APACHE_TOMCAT_PORT:-3030}:3030"
    volumes:
      - "${ENV_SPRING_BOOT_APPDIR}:/home/gradle"
      - "${ENV_DATALAKE_FILE_DIR}:/data"
    environment:
      SPRING_BOOT_ENVIRONMENT: ${ENV_DOCKER_ENVIRONMENT}
    networks:
      local:
        aliases:
          - spring

  mysql:
    container_name: mysql
    image: mariadb
    ports: 
      - "${ENV_MYSQL_PORT:-3306}:3306"
    volumes:
      - "mysqldb:/var/lib/mysql"
    environment:
      - MYSQL_ROOT_PASSWORD=N32R2sWW2bsbMG75
      - MYSQL_DATABASE=orion
    networks:
      local:
        aliases:
          - mysql

  nginx:
    container_name: nginx
    build: ./nginx
    volumes:
      - ./logs:/var/logs
      - "${ENV_NGINX_CONF_DIR}/nginx.conf:/etc/nginx/nginx.conf"
      - "${ENV_NGINX_CONF_DIR}/app.template:/etc/nginx/conf.d/app.template"
      - ${ENV_REACT_APPDIR}:/usr/share/nginx/html
    environment:
      ENV_APP_PORT: ${ENV_APP_PORT}
      ENV_APP_HOSTNAME: ${ENV_APP_HOSTNAME}
      NODE_ENV: ${ENV_DOCKER_ENVIRONMENT:-dev}
    ports:
      - ${ENV_APP_PORT}:${ENV_APP_PORT}
    command: /bin/bash -c "envsubst '$${ENV_APP_HOSTNAME},$${ENV_APP_PORT}' < /etc/nginx/conf.d/app.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    restart: always
    networks:
      local:
        aliases:
          - nginx

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:6.2.4
    ports: 
      - "5601:5601"
    environment:
      SERVER_NAME: elasticsearch
      ELASTICSEARCH_URL: http://elasticsearch:9200
    networks:
      local:
        aliases:
          - kibana

  elasticsearch:
    container_name: elasticsearch 
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
    volumes: 
     - "esdata:/usr/share/elasticsearch/data"
    expose:
      - "9200"
      - "9300"
    environment:
      discovery.type: "single-node"
    networks:
      local:
        aliases:
          - elasticsearch


volumes:
  mysqldb:
  esdata:

networks:
  local:
    driver: bridge
    ipam:
      driver: default
      config:
        - 
          subnet: 10.252.0.0/16
