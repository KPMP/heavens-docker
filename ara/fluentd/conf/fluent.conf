<source>
  @type forward
  port 24224
  bind 0.0.0.0
</source>

<filter orion-data>
    @type parser
    key_name log
    reserve_data true
    reserve_time true
    <parse>
      @type grok
      grok_failure_key grokfailure
      <grok>
        pattern %{TIMESTAMP_ISO8601:time_stamp}%{SPACE}%{LOGLEVEL:log_level}%{SPACE}%{NUMBER:pid}%{SPACE}---%{SPACE}\[\s*%{DATA:threadname}\]%{SPACE}%{DATA:logger}%{SPACE}:%{SPACE}USER\:%{SPACE}userId\:%{SPACE}(?<userID>.*),%{SPACE}firstName\:%{SPACE}(?<firstName>.*),%{SPACE}lastName\:%{SPACE}(?<lastName>.*),%{SPACE}displayName\:%{SPACE}(?<displayName>.*),%{SPACE}email\:%{SPACE}(?<email>.*),%{SPACE}shibId\:%{SPACE}(?<shibId>.*)%{SPACE}\|%{SPACE}PKGID\:%{SPACE}(?<pkgid>.*)%{SPACE}\|%{SPACE}URI\:%{SPACE}(?<uri>.*)%{SPACE}\|%{SPACE}MSG\:%{SPACE}(?<appMessage>.*) 
      </grok>
      <grok>
        pattern %{TIMESTAMP_ISO8601:time_stamp}%{SPACE}%{LOGLEVEL:log_level}%{SPACE}%{NUMBER:pid}%{SPACE}---%{SPACE}\[\s*%{DATA:threadname}\]%{SPACE}%{DATA:logger}%{SPACE}:%{SPACE}(?<message>(.|\r|\n)*)
      </grok>
    </parse>
</filter>

<filter eridanus-data>
    @type parser
    key_name log
    reserve_data true
    reserve_time true
    <parse>
      @type grok
      grok_failure_key grokfailure
      <grok>
        pattern %{TIMESTAMP_ISO8601:time_stamp}%{SPACE}%{LOGLEVEL:log_level}%{SPACE}%{NUMBER:pid}%{SPACE}---%{SPACE}\[\s*%{DATA:threadname}\]%{SPACE}%{DATA:logger}%{SPACE}:%{SPACE}URI\:%{SPACE}(?<uri>.*)%{SPACE}\|%{SPACE}MSG\:%{SPACE}(?<appMessage>.*) 
      </grok>
      <grok>
        pattern %{TIMESTAMP_ISO8601:time_stamp}%{SPACE}%{LOGLEVEL:log_level}%{SPACE}%{NUMBER:pid}%{SPACE}---%{SPACE}\[\s*%{DATA:threadname}\]%{SPACE}%{DATA:logger}%{SPACE}:%{SPACE}(?<message>(.|\r|\n)*)
      </grok>
    </parse>
</filter>

<filter state-manager-data>
    @type parser
    key_name log
    reserve_data true
    reserve_time true
    <parse>
      @type grok
      grok_failure_key grokfailure
      <grok>
        pattern %{TIMESTAMP_ISO8601:time_stamp}%{SPACE}%{LOGLEVEL:log_level}%{SPACE}%{NUMBER:pid}%{SPACE}---%{SPACE}\[\s*%{DATA:threadname}\]%{SPACE}%{DATA:logger}%{SPACE}:%{SPACE}URI\:%{SPACE}(?<uri>.*)%{SPACE}\|%{SPACE}PKGID\:%{SPACE}(?<pkgid>.*)%{SPACE}\|%{SPACE}MSG\:%{SPACE}(?<appMessage>.*) 
      </grok>
      <grok>
        pattern %{TIMESTAMP_ISO8601:time_stamp}%{SPACE}%{LOGLEVEL:log_level}%{SPACE}%{NUMBER:pid}%{SPACE}---%{SPACE}\[\s*%{DATA:threadname}\]%{SPACE}%{DATA:logger}%{SPACE}:%{SPACE}URI\:%{SPACE}(?<uri>.*)%{SPACE}\|%{SPACE}MSG\:%{SPACE}(?<appMessage>.*) 
      </grok>
      <grok>
        pattern %{TIMESTAMP_ISO8601:time_stamp}%{SPACE}%{LOGLEVEL:log_level}%{SPACE}%{NUMBER:pid}%{SPACE}---%{SPACE}\[\s*%{DATA:threadname}\]%{SPACE}%{DATA:logger}%{SPACE}:%{SPACE}(?<message>(.|\r|\n)*)
      </grok>
    </parse>
</filter>

<filter delphinus-data>
    @type parser
    key_name log
    reserve_data true
    reserve_time true
    <parse>
      @type grok
      grok_failure_key grokfailure
      <grok>
        pattern %{TIMESTAMP_ISO8601:time_stamp}%{SPACE}%{LOGLEVEL:log_level}%{SPACE}%{NUMBER:pid}%{SPACE}---%{SPACE}\[\s*%{DATA:threadname}\]%{SPACE}%{DATA:logger}%{SPACE}:%{SPACE}USER\:%{SPACE}firstName\:%{SPACE}(?<firstName>.*),%{SPACE}lastName\:%{SPACE}(?<lastName>.*),%{SPACE}displayName\:%{SPACE}(?<displayName>.*),%{SPACE}email\:%{SPACE}(?<email>.*),%{SPACE}shibId\:%{SPACE}(?<shibId>.*)%{SPACE}\|%{SPACE}URI\:%{SPACE}(?<uri>.*)%{SPACE}\|%{SPACE}MSG\:%{SPACE}(?<appMessage>.*) 
      </grok>
      <grok>
        pattern %{TIMESTAMP_ISO8601:time_stamp}%{SPACE}%{LOGLEVEL:log_level}%{SPACE}%{NUMBER:pid}%{SPACE}---%{SPACE}\[\s*%{DATA:threadname}\]%{SPACE}%{DATA:logger}%{SPACE}:%{SPACE}(?<message>(.|\r|\n)*)
      </grok>	  
    </parse>
</filter>

<filter atlas-es01>
    @type parser
    key_name log
    reserve_data true
    reserve_time true
    <parse>
      @type grok
      grok_failure_key grokfailure
      <grok>
        pattern %{IPORHOST:source.ip} %{USER:user.id} %{USER:user.name} \[%{HTTPDATE:@timestamp}\] "%{WORD:http.request.method} %{DATA:url.original} HTTP/%{NUMBER:http.version}" %{NUMBER:http.response.status_code:int} (?:-|%{NUMBER:http.response.body.bytes:int}) %{QS:http.request.referrer} %{QS:user_agent}
      </grok>
    </parse>
</filter>

<filter atlas-es02>
    @type parser
    key_name log
    reserve_data true
    reserve_time true
    <parse>
      @type grok
      grok_failure_key grokfailure
      <grok>
        pattern %{IPORHOST:source.ip} %{USER:user.id} %{USER:user.name} \[%{HTTPDATE:@timestamp}\] "%{WORD:http.request.method} %{DATA:url.original} HTTP/%{NUMBER:http.version}" %{NUMBER:http.response.status_code:int} (?:-|%{NUMBER:http.response.body.bytes:int}) %{QS:http.request.referrer} %{QS:user_agent}
      </grok>
    </parse>
</filter>

<filter atlas-es03>
    @type parser
    key_name log
    reserve_data true
    reserve_time true
    <parse>
      @type grok
      grok_failure_key grokfailure
      <grok>
        pattern %{IPORHOST:source.ip} %{USER:user.id} %{USER:user.name} \[%{HTTPDATE:@timestamp}\] "%{WORD:http.request.method} %{DATA:url.original} HTTP/%{NUMBER:http.version}" %{NUMBER:http.response.status_code:int} (?:-|%{NUMBER:http.response.body.bytes:int}) %{QS:http.request.referrer} %{QS:user_agent}
      </grok>
    </parse>
</filter>


<match **>
  @type copy
  <store>
    @type stdout
  </store>  
  <store>
    @type elasticsearch
    host elasticsearch
    port 9200    
    flush_interval 5

    logstash_format true
    include_tag_key true
  </store>
</match>
