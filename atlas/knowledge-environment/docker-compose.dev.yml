version: "3.5"
services:

  pegasus-spring:
    container_name: pegasus-spring
    image: kingstonduo/pegasus-data
    depends_on: 
      - mariadb
    ports:
      - "${ENV_APACHE_TOMCAT_PORT:-3030}:3030"
    environment:
      SPRING_BOOT_ENVIRONMENT: ${ENV_DOCKER_ENVIRONMENT}
      MYSQL_HOST: ${ENV_MYSQL_HOST}
      MYSQL_USER: ${ENV_MYSQL_USER}
      MYSQL_PASSWORD: ${ENV_MYSQL_PASSWORD}
      TZ: "America/Detroit"
    privileged: true
    networks:
      local:
        aliases:
          - pegasus-spring
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
  
  hubble-spring:
    container_name: hubble-spring
    image: kingstonduo/pegasus-data
    depends_on: 
      - mariadb
    ports:
      - "3040:3030"
    environment:
      SPRING_BOOT_ENVIRONMENT: ${ENV_DOCKER_ENVIRONMENT}
      MYSQL_HOST: ${ENV_MYSQL_HOST}
      MYSQL_USER: ${ENV_MYSQL_USER}
      MYSQL_PASSWORD: ${ENV_MYSQL_PASSWORD}
      TZ: "America/Detroit"
    privileged: true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    networks:
      local:
        aliases:
          - hubble-spring       

  mariadb:
    image: mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${ENV_MYSQL_PASSWORD}
    volumes:
      - mariadbdata:/var/lib/mysql
    ports:
      - 3306:3306
    networks:
      local:
        aliases:
          - mariadb
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  adminer:
    image: adminer
    restart: always
    environment:
      - "TZ=America/Detroit"
    ports:
      - 9090:8080 
    networks:
      local:
        aliases:
          - adminer    
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
    container_name: es01
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - esdata01:/usr/share/elasticsearch/data
      - ${ENV_ES_CONF_DIR}/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      - node.name=es01
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "TZ=America/Detroit"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"
    networks:
      local:
        aliases:
          - elasticsearch

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
    container_name: es02
    expose:
      - 9200
      - 9300
    volumes:
      - esdata02:/usr/share/elasticsearch/data
      - ${ENV_ES_CONF_DIR}/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      - node.name=es02
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "TZ=America/Detroit"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"
    networks:
      local:
        aliases:
          - elasticsearch

  es03:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
    container_name: es03
    expose:
      - 9200
      - 9300
    volumes:
      - esdata03:/usr/share/elasticsearch/data
      - ${ENV_ES_CONF_DIR}/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      - node.name=es03
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "TZ=America/Detroit"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"
    networks:
      local:
        aliases:
          - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.16.1
    ports:
      - 5601:5601
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"
    depends_on:
      - es01
      - es02
      - es03
    environment:
      SERVER_NAME: elasticsearch
      ELASTICSEARCH_URL: http://elasticsearch:9200
      LOGGING_QUIET: "true"
      TZ: "America/Detroit"
    volumes:
      - ${ENV_KIBANA_CONF_DIR}/kibana.yml:/usr/share/kibana/kibana.yml
    networks:
      local:
        aliases:
          - kibana

  metricbeat:
    image: kingstonduo/metricbeat:1.0
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    volumes:
      - metricbeat-data01:/usr/share/metricbeat/data
    networks:
      local:
        aliases:
          - metricbeat
    depends_on:
      - es01
      - es02
      - es03

  arranger-server:
    image: overture/arranger-server:2.16.1 
    container_name: arranger-server.local
    depends_on:
      - es01
      - es02
      - es03
    ports:
      - 5050:5050
    environment:
      ES_HOST: http://elasticsearch:9200
      TZ: "America/Detroit"
    networks:
      local:
        aliases:
          - arranger-server
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  arranger-ui:
    image: overture/arranger-ui:2.16.1
    hostname: arranger-ui.local
    container_name: arranger-ui.local
    environment:
      - "TZ=America/Detroit"
      - "REACT_APP_ARRANGER_ADMIN_ROOT=http://arranger-server:5050"
    depends_on:
      - arranger-server
    ports:
      - 8080:3000
      - 8081:3000
    networks:
      local:
        aliases:
          - arranger-ui
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
          
  atlas-file-service:
    image: kingstonduo/atlas-file-service:3.1
    ports:
      - "5000:5000"
    volumes:
      - ${ENV_FLASK_HOME}:/code
    environment:
      - FLASK_ENV=production
      - MINIO_ACCESS_KEY=${ENV_MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${ENV_MINIO_SECRET_KEY}
      - MINIO_URL=${ENV_MINIO_URL}
      - BUCKET_NAME=${ENV_BUCKET_NAME}
      - TZ=America/Detroit
    networks:
      local:
        aliases:
          - atlas-file-service   
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
 
  minio-s3:
    image: minio/minio
    ports:
      - "9000:9000"
    environment:
      - MINIO_ACCESS_KEY=${ENV_MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${ENV_MINIO_SECRET_KEY}
      - "TZ=America/Detroit"
    command: gateway s3
    networks:
      local:
        aliases:
          - minio-s3    
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  index-creation-worker:
    image: kingstonduo/atlas-index-creation-worker:latest
    container_name: index-creation-worker
    restart: always
    ports:
      - "5001:5000"
    environment:
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: ${ENV_MYSQL_PASSWORD}
      MYSQL_HOST: ${ENV_MYSQL_HOST}
      TZ: "America/Detroit"
    networks:
      local:
        aliases:
          - index-creator
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

volumes:
  esdata01:
    driver: local
  esdata02:
    driver: local
  esdata03:
    driver: local
  mariadbdata:

networks:
  local:
    name: dataPortal
    ipam:
      driver: default
      config:
        - 
          subnet: 10.12.0.0/16
