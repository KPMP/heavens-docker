version: "3.5"
services:

  apache:
    container_name: apache
    image: ${ENV_APACHE_CONTAINER} 
    ports:
      - "80:80"
      - "443:443"
    environment:
      - ENV_APACHE_SERVER_NAME=${ENV_APACHE_SERVER_NAME}
    volumes:
      - ${ENV_REACT_APPDIR}/build:/var/www/html
      - ${ENV_DATA_DIR}:/var/www/html/data
    networks:
      local:
        aliases:
          - apache

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.0
    container_name: es01
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - esdata01:/usr/share/elasticsearch/data01
      - ${ENV_ES_CONF_DIR}/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      - node.name=es01
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"
    healthcheck:
      test: "curl --silent --fail localhost:9200/_cluster/health?wait_for_status=yellow&timeout=50s || exit 1"
      interval: 1m30s
      timeout: 50s
      retries: 5
    networks:
      local:
        aliases:
          - elasticsearch

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.0
    container_name: es02
    expose:
      - 9200
      - 9300
    volumes:
      - esdata02:/usr/share/elasticsearch/data02
      - ${ENV_ES_CONF_DIR}/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      - node.name=es02
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"
    healthcheck:
      test: "curl --silent --fail localhost:9200/_cluster/health?wait_for_status=yellow&timeout=50s || exit 1"
      interval: 1m30s
      timeout: 50s
      retries: 5
    networks:
      local:
        aliases:
          - elasticsearch

  es03:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.0
    container_name: es03
    expose:
      - 9200
      - 9300
    volumes:
      - esdata03:/usr/share/elasticsearch/data03
      - ${ENV_ES_CONF_DIR}/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      - node.name=es03
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"
    healthcheck:
      test: "curl --silent --fail localhost:9200/_cluster/health?wait_for_status=yellow&timeout=50s || exit 1"
      interval: 1m30s
      timeout: 50s
      retries: 5
    networks:
      local:
        aliases:
          - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.5.0
    ports:
      - 5601:5601
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"
    depends_on:
      - es01
      - es02
      - es03 
    environment:
      SERVER_NAME: elasticsearch
      ELASTICSEARCH_URL: http://elasticsearch:9200
    volumes:
      - ${ENV_KIBANA_CONF_DIR}/kibana.yml:/usr/share/kibana/kibana.yml
    networks:
      local:
        aliases:
          - kibana

  arranger-server:
    image: kingstonduo/arranger
    container_name: arranger-server.local
    depends_on:
      - es01
      - es02
      - es03 
    ports:
      - 5050:5050
    environment:
      ES_HOST: http://elasticsearch:9200
    networks:
      local:
        aliases:
          - arranger-server
  
  arranger-ui:
    image: kingstonduo/arranger-ui
    hostname: arranger-ui.local
    container_name: arranger-ui.local
    depends_on:
      - arranger-server
    ports:
      - 8080:8080
      - 8081:8081
    networks:
      local:
        aliases:
          - arranger-ui

  atlas-file-service:
    image: kingstonduo/atlas-file-service
    ports:
      - "5000:5000"
    volumes:
      - ${ENV_FLASK_HOME}:/code
    depends_on:
      - redis
    environment:
      - FLASK_ENV=development
      - MINIO_ACCESS_KEY=${ENV_MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${ENV_MINIO_SECRET_KEY}
      - MINIO_URL=${ENV_MINIO_URL}
      - BUCKET_NAME=${ENV_BUCKET_NAME}
    networks:
      local:
        aliases:
          - atlas-file-service

  redis:
    image: redis
    networks:
      local:
        aliases:
          - redis
          
  minio-s3:
    image: minio/minio
    ports:
      - "9000:9000"
    environment:
      - MINIO_ACCESS_KEY=${ENV_MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${ENV_MINIO_SECRET_KEY}
    command: gateway s3
    networks:
      local:
        aliases:
          - minio-s3

volumes:
  esdata01:
    driver: local
  esdata02:
    driver: local
  esdata03:
    driver: local
  mongodbdata:

networks:
  local:
    name: dataPortal
    ipam:
      driver: default
      config:
        - 
          subnet: 10.12.0.0/16
